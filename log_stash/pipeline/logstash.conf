# input { 
# 	beats {
# 	    port => 5044
# 	    host => "0.0.0.0"
#   	}
# } 

# output { 
# 	elasticsearch { 
# 		hosts => elasticsearch
# 		manage_template => false
#     	index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
# 	} 
	
#     stdout { codec => rubydebug }
# }


input {

        tcp {
            port => 5000
            type => syslog
        }
        udp {
            port => 5000
            type => syslog
        }

        #file {
        #        type => "syslog"
        #        path => "/var/log/syslog"
        #        start_position => "beginning"
		#}
        file {
                type => "nginx"
                path => "/usr/share/logstash/nginx/*.log"
                start_position => "beginning"
		}
}


filter {
  if [type] == "nginx" {
    grok {
	patterns_dir => "/etc/logstash/patterns"
	match => { "message" => "%{NGINX_ACCESS}" }
	remove_tag => ["_grokparsefailure"]
	add_tag => ["nginx_access"]
    }
    geoip {
      source => "clientip"
    }
  }


  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}


output {
    if [type] == "syslog" {
        elasticsearch {
        	index => "%{type}"
       		'hosts' => ["http://elasticsearch:9200"]
        }
    }

	if [type] == "nginx" {
        elasticsearch {
        index => "%{type}"
        'hosts' => ["http://elasticsearch:9200"]
        }
    }
}
